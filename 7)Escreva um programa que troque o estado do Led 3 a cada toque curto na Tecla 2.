#include <stdint.h>

#include "stm32f10x.h"

void delay_ms(uint32_t ms) {
	SysTick->LOAD = ms * 1000 - 1;
	SysTick->CTRL = 0x1;
	while ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG) == 0) {}
	SysTick->CTRL = 0x0;
}

int main(void) {
    // Habilita o GPIOB e GPIOA
    RCC->APB2ENR = RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN;

    // Configura o pino PB1 (LED 3) como saída
    GPIOB->CRL &= ~(GPIO_CRL_MODE1 | GPIO_CRL_CNF1);
    GPIOB->CRL |= GPIO_CRL_MODE1;

    // Configura o pino PA7 (Tecla 2) como entrada
    GPIOA->CRL &= ~(GPIO_CRL_MODE7 | GPIO_CRL_CNF7);
    GPIOA->CRL |= GPIO_CRL_CNF7_1;

    // Habilita o resistor de pull-up do pino PA7 (Tecla 2)
    GPIOA->ODR |= GPIO_ODR_ODR7;

    uint32_t lastButtonState = 0;
    while (1) {
    	// Lê o estado da Tecla 2 (pino PA1)
    	uint32_t currentButtonState = GPIOA->IDR & GPIO_IDR_IDR7;

    	    // Compara o estado atual com o antigo da tecla
    	    if (currentButtonState != lastButtonState) {
    	        lastButtonState = currentButtonState;
    	        // Verifica se a Tecla 2 está pressionada
    	        if (currentButtonState == 0) {
    	            // Troca o estado do LED 3 (PB1)
    	            GPIOB->ODR ^= GPIO_ODR_ODR1;
    	        }
    	        // Espera 100 ms antes de verificar novamente o estado do botão
    	        delay_ms(100);
    	    }
    }
}
