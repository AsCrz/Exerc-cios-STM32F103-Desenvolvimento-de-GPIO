#include <stdint.h>

#include "stm32f10x.h"

void delay_ms(uint32_t ms) {
	SysTick->LOAD = ms * 1000 - 1;
	SysTick->CTRL = 0x1;
	while ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG) == 0) {}
	SysTick->CTRL = 0x0;
}

int main(void) {
    // Habilita o GPIOB e GPIOA
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;

    // Configura os pinos PB11 (LED 1), PB10 (LED 2) e PB1 (LED 3) como saída
    GPIOB->CRL &= ~(GPIO_CRL_MODE1 | GPIO_CRL_CNF1);
    GPIOB->CRH &= ~(GPIO_CRH_MODE10 | GPIO_CRH_CNF10)
    		& ~(GPIO_CRH_MODE11 | GPIO_CRH_CNF11);
    GPIOB->CRL |= GPIO_CRL_MODE1;
    GPIOB->CRH |= GPIO_CRH_MODE10 | GPIO_CRH_MODE11;

    // Configura o pino PB0 (Tecla 1) como entrada
    GPIOB->CRL &= ~(GPIO_CRL_MODE0 | GPIO_CRL_CNF0);
    GPIOB->CRL |= GPIO_CRL_MODE0_1;

    // Habilita o resistor de pull-up do pino PB0
    GPIOB->ODR |= GPIO_ODR_ODR0;

    volatile uint32_t LEDcount = 0;
    volatile uint32_t lastButtonState = 0;

    while (1) {
        // Lê o estado da Tecla 1 (pino PA0)
        uint32_t currentButtonState = GPIOB->IDR & GPIO_IDR_IDR0;

        // Verifica se a Tecla 1 foi pressionada
        if (currentButtonState != lastButtonState) {
            lastButtonState = currentButtonState;
            // Verifica se a Tecla 1 está pressionada
            if (currentButtonState == 0) {
                // Troca para o próximo LED da lista
                LEDcount++;
            }
            // Espera 100 ms antes de verificar novamente o estado do botão
            delay_ms(100);
        }

        // Apaga todos os LEDs
        GPIOB->ODR &= ~GPIO_ODR_ODR11 & ~GPIO_ODR_ODR10 & ~GPIO_ODR_ODR1;

        // Acende o LED atual com base no estado do ciclo de ativação dos LEDs
        switch (LEDcount) {
            case 1:
            	// Acende o LED 1
                GPIOB->ODR |= GPIO_ODR_ODR11;
                break;
            case 2:
            	// Acende o LED 2
                GPIOB->ODR |= GPIO_ODR_ODR10;
                break;
            case 3:
            	// Acende o LED 3
                GPIOB->ODR |= GPIO_ODR_ODR1;
                break;
            default:
            	LEDcount = 1;
            	break;
        }
    }
}
