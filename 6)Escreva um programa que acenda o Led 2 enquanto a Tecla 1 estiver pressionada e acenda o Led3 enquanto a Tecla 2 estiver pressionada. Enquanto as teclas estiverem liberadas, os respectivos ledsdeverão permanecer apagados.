#include <stdint.h>
#include <stdbool.h>
#include <stdio.h>
#include "stm32f10x.h"

void SysTick_Handler()
{
    // Controle do LED 2 com base no estado da Tecla 1
    if ((GPIOA->IDR & (1 << 7)) == 0) {
        // Tecla 1 está pressionada, liga o LED 2 (PB12)
        GPIOB->ODR |= (1 << 12);
    } else {
        // Tecla 1 está liberada, apaga o LED 2 (PB12)
        GPIOB->ODR &= ~(1 << 12);
    }

    // Controle do LED 3 com base no estado da Tecla 2
    if ((GPIOA->IDR & (1 << 6)) == 0) {
        // Tecla 2 está pressionada, liga o LED 3 (PB13)
        GPIOB->ODR |= (1 << 13);
    } else {
        // Tecla 2 está liberada, apaga o LED 3 (PB13)
        GPIOB->ODR &= ~(1 << 13);
    }
}

int main(void)
{
    // Habilita o GPIOB e GPIOA
    RCC->APB2ENR = 0x0000000C;

    // Configura os pinos PB12 e PB13 como saída
    GPIOB->CRH = 0x44334444;

    // Configura os pinos PA6 e PA7 como entrada
    GPIOA->CRL = 0x88444444;

    // Habilita o resistor de pull-up dos pinos PA6 e PA7
    GPIOA->ODR |= (1 << 7) | (1 << 6);

    // Configura o SysTick para gerar uma interrupção a cada 1s
    SysTick->LOAD = 8000000 - 1; // 1 segundo (em microssegundos)
    SysTick->CTRL = 0x00000007;  // Habilita o SysTick e a interrupção

    while (1)
    {

    }
}
